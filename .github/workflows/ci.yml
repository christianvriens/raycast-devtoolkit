name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  python-tests:
    name: Python tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/python-tools/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install and run Python tests via launcher
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r python-tools/requirements.txt
          pip install -r python-tools/requirements-dev.txt
          chmod +x python-tools/run.sh || true
          # Run pytest through the launcher but also produce junit xml for PR reporting
          # pass pytest flags after the 'test' positional argument
          ./python-tools/run.sh test -vv --junitxml=python-tools/test-report.xml

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-test-report-${{ matrix.python-version }}
          path: python-tools/test-report.xml

      # Annotations via test-reporter removed due to runner input compatibility issues.
      # We keep the uploaded JUnit report as an artifact; re-add annotations with the
      # correct `reporter` input if desired.

  node-tests:
    name: Node / TypeScript tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci

      - name: Run frontend tests / build
        run: |
          npm run test --if-present
          npm run build --if-present
